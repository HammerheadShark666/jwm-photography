// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotographySite.Data.Contexts;

#nullable disable

namespace PhotographySite.Migrations
{
    [DbContext(typeof(PhotographySiteDbContext))]
    [Migration("20230330131825_add-description2-to-gallery")]
    partial class adddescription2togallery
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhotographySite.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Landscape"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wildlife"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Underwater"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Portrait"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Macro"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Miscellaneous"
                        });
                });

            modelBuilder.Entity("PhotographySite.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "England"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wales"
                        },
                        new
                        {
                            Id = 5,
                            Name = "India"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Nepal"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Tibet"
                        },
                        new
                        {
                            Id = 9,
                            Name = "China"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Cambodia"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Borneo"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Philippines"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Peru"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Chile"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Myanmar"
                        });
                });

            modelBuilder.Entity("PhotographySite.Models.Gallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Description2")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Gallery");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Landscape"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wildlife"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Underwater"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Portraits"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Black & White"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Macro"
                        });
                });

            modelBuilder.Entity("PhotographySite.Models.GalleryPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GalleryId")
                        .HasColumnType("int");

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint");

                    b.Property<long>("PhotoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GalleryId");

                    b.HasIndex("PhotoId");

                    b.ToTable("GalleryPhoto");
                });

            modelBuilder.Entity("PhotographySite.Models.Montage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Column")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Orientation")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Montage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Column = (byte)1,
                            Order = (byte)1,
                            Orientation = (byte)1
                        },
                        new
                        {
                            Id = 2,
                            Column = (byte)1,
                            Order = (byte)2,
                            Orientation = (byte)0
                        },
                        new
                        {
                            Id = 3,
                            Column = (byte)1,
                            Order = (byte)3,
                            Orientation = (byte)2
                        },
                        new
                        {
                            Id = 4,
                            Column = (byte)1,
                            Order = (byte)4,
                            Orientation = (byte)2
                        },
                        new
                        {
                            Id = 5,
                            Column = (byte)2,
                            Order = (byte)1,
                            Orientation = (byte)0
                        },
                        new
                        {
                            Id = 6,
                            Column = (byte)2,
                            Order = (byte)2,
                            Orientation = (byte)1
                        },
                        new
                        {
                            Id = 7,
                            Column = (byte)2,
                            Order = (byte)3,
                            Orientation = (byte)2
                        },
                        new
                        {
                            Id = 8,
                            Column = (byte)2,
                            Order = (byte)4,
                            Orientation = (byte)2
                        },
                        new
                        {
                            Id = 9,
                            Column = (byte)2,
                            Order = (byte)5,
                            Orientation = (byte)0
                        },
                        new
                        {
                            Id = 10,
                            Column = (byte)2,
                            Order = (byte)6,
                            Orientation = (byte)0
                        },
                        new
                        {
                            Id = 11,
                            Column = (byte)3,
                            Order = (byte)1,
                            Orientation = (byte)2
                        },
                        new
                        {
                            Id = 12,
                            Column = (byte)3,
                            Order = (byte)2,
                            Orientation = (byte)0
                        },
                        new
                        {
                            Id = 13,
                            Column = (byte)4,
                            Order = (byte)1,
                            Orientation = (byte)1
                        },
                        new
                        {
                            Id = 14,
                            Column = (byte)4,
                            Order = (byte)2,
                            Orientation = (byte)1
                        },
                        new
                        {
                            Id = 15,
                            Column = (byte)4,
                            Order = (byte)3,
                            Orientation = (byte)2
                        },
                        new
                        {
                            Id = 16,
                            Column = (byte)4,
                            Order = (byte)4,
                            Orientation = (byte)0
                        });
                });

            modelBuilder.Entity("PhotographySite.Models.Orientation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Orientation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Landscape"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Portrait"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Square"
                        });
                });

            modelBuilder.Entity("PhotographySite.Models.Palette", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Palette");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Colour"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Black & White"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Infrared"
                        });
                });

            modelBuilder.Entity("PhotographySite.Models.Photo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AperturValue")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Camera")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateTaken")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("ExposureProgram")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExposureTime")
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FocalLength")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Iso")
                        .HasColumnType("int");

                    b.Property<string>("Lens")
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte>("Orientation")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PaletteId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("UseInMontage")
                        .HasColumnType("bit");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PaletteId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("PhotographySite.Models.Showcase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Showcase");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Black & White"
                        },
                        new
                        {
                            Id = 2L,
                            DateFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mountains"
                        },
                        new
                        {
                            Id = 3L,
                            DateFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atacama Desert"
                        });
                });

            modelBuilder.Entity("PhotographySite.Models.ShowcasePhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint");

                    b.Property<int>("PhotoId")
                        .HasColumnType("int");

                    b.Property<int>("ShowcaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShowcasePhoto");
                });

            modelBuilder.Entity("PhotographySite.Models.GalleryPhoto", b =>
                {
                    b.HasOne("PhotographySite.Models.Gallery", null)
                        .WithMany("Photos")
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhotographySite.Models.Photo", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("PhotographySite.Models.Photo", b =>
                {
                    b.HasOne("PhotographySite.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("PhotographySite.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("PhotographySite.Models.Palette", "Palette")
                        .WithMany()
                        .HasForeignKey("PaletteId");

                    b.Navigation("Category");

                    b.Navigation("Country");

                    b.Navigation("Palette");
                });

            modelBuilder.Entity("PhotographySite.Models.Gallery", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
